{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","todo","userInfo","usersFromServer","find","userId","cn","completed","title","TodoList","todos","map","App","useState","setTitle","setUser","errorUser","setErrorUser","errorTitle","setErrorTitle","todosFromServer","availableTodos","setAvailableTodos","newTodoId","arrayTodoId","Math","max","handleSubmit","event","preventDefault","userObject","userName","newTodo","visible","action","method","type","placeholder","value","onChange","target","disabled","userToSelect","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e675f46.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo = ({ user }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\nimport { User } from '../../types/user';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const userInfo: User | undefined = usersFromServer\n    .find(user => user.id === todo.userId);\n\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={userInfo} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('0');\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [availableTodos, setAvailableTodos] = useState(todosFromServer);\n\n  const errors = () => {\n    if (user === '0') {\n      setErrorUser(true);\n    }\n\n    if (!title) {\n      setErrorTitle(true);\n    }\n  };\n\n  const clearState = () => {\n    setTitle('');\n    setUser('0');\n  };\n\n  const newTodoId = () => {\n    const arrayTodoId = availableTodos.map(todo => todo.id);\n    const id = Math.max(...arrayTodoId) + 1;\n\n    return id;\n  };\n\n  const handleTitle = (value: string) => {\n    setErrorTitle(false);\n    setTitle(value);\n  };\n\n  const handleSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    errors();\n\n    if (user === '0' || !title) {\n      return;\n    }\n\n    const userObject = usersFromServer\n      .find(userName => userName.id === +(user));\n\n    if (userObject) {\n      const newTodo = {\n        id: newTodoId(),\n        title,\n        completed: false,\n        userId: userObject.id,\n      };\n\n      setAvailableTodos(visible => (\n        [\n          ...visible,\n          newTodo,\n        ]\n      ));\n\n      clearState();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            name=\"title\"\n            onChange={(event) => (\n              handleTitle(event.target.value)\n            )}\n          />\n          { errorTitle\n              && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            name=\"user\"\n            onChange={(event) => {\n              setUser(event.target.value);\n\n              if (event.target.value !== '0') {\n                setErrorUser(false);\n              }\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(userToSelect => (\n              <option\n                key={userToSelect.id}\n                value={userToSelect.id}\n              >\n                {userToSelect.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(event) => {\n            handleSubmit(event);\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={availableTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}